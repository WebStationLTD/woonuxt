/**
 * Tracking Plugin
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞ Meta Pixel, Google Analytics 4, Google Ads –∏ GTM
 * Client-side only plugin
 */
export default defineNuxtPlugin((nuxtApp) => {
  const config = useRuntimeConfig();

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ tracking –µ –∞–∫—Ç–∏–≤–∏—Ä–∞–Ω
  if (!config.public.TRACKING_ENABLED) {
    console.log("üö´ Tracking –µ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–∞–Ω");
    return;
  }

  if (config.public.TRACKING_DEBUG) {
    console.log("üéØ Tracking Plugin initialized with config:", {
      metaPixel: !!config.public.META_PIXEL_ID,
      googleAnalytics: !!config.public.GOOGLE_ANALYTICS_ID,
      googleAds: !!config.public.GOOGLE_ADS_ID,
      gtm: !!config.public.GTM_ID,
    });
  }

  // ============================================
  // GOOGLE TAG MANAGER (GTM)
  // ============================================
  if (config.public.GTM_ID) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞–º–µ data layer –ü–†–ï–î–ò GTM —Å–∫—Ä–∏–ø—Ç–∞
    window.dataLayer = window.dataLayer || [];
    window.dataLayer.push({
      "gtm.start": new Date().getTime(),
      event: "gtm.js",
    });

    // –î–æ–±–∞–≤—è–º–µ GTM —Å–∫—Ä–∏–ø—Ç–∞
    const gtmScript = document.createElement("script");
    gtmScript.async = true;
    gtmScript.src = `https://www.googletagmanager.com/gtm.js?id=${config.public.GTM_ID}`;
    document.head.appendChild(gtmScript);

    // –î–æ–±–∞–≤—è–º–µ GTM noscript iframe –∑–∞ fallback
    const gtmIframe = document.createElement("noscript");
    gtmIframe.innerHTML = `<iframe src="https://www.googletagmanager.com/ns.html?id=${config.public.GTM_ID}" height="0" width="0" style="display:none;visibility:hidden"></iframe>`;
    document.body.insertBefore(gtmIframe, document.body.firstChild);

    if (config.public.TRACKING_DEBUG) {
      console.log("‚úÖ GTM initialized:", config.public.GTM_ID);
    }
  }

  // ============================================
  // META (FACEBOOK) PIXEL
  // ============================================
  if (config.public.META_PIXEL_ID) {
    // Facebook Pixel Base Code
    !(function (f: any, b: any, e: any, v: any, n?: any, t?: any, s?: any) {
      if (f.fbq) return;
      n = f.fbq = function () {
        n.callMethod
          ? n.callMethod.apply(n, arguments)
          : n.queue.push(arguments);
      };
      if (!f._fbq) f._fbq = n;
      n.push = n;
      n.loaded = !0;
      n.version = "2.0";
      n.queue = [];
      t = b.createElement(e);
      t.async = !0;
      t.src = v;
      s = b.getElementsByTagName(e)[0];
      s.parentNode.insertBefore(t, s);
    })(
      window,
      document,
      "script",
      "https://connect.facebook.net/en_US/fbevents.js"
    );

    window.fbq("init", config.public.META_PIXEL_ID);
    window.fbq("track", "PageView");

    if (config.public.TRACKING_DEBUG) {
      console.log("‚úÖ Meta Pixel initialized:", config.public.META_PIXEL_ID);
    }
  }

  // ============================================
  // GOOGLE ANALYTICS 4 (GA4)
  // ============================================
  if (config.public.GOOGLE_ANALYTICS_ID) {
    // –î–æ–±–∞–≤—è–º–µ GA4 —Å–∫—Ä–∏–ø—Ç–∞
    const gaScript = document.createElement("script");
    gaScript.async = true;
    gaScript.src = `https://www.googletagmanager.com/gtag/js?id=${config.public.GOOGLE_ANALYTICS_ID}`;
    document.head.appendChild(gaScript);

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞–º–µ gtag
    window.dataLayer = window.dataLayer || [];
    function gtag(...args: any[]) {
      window.dataLayer.push(arguments);
    }
    window.gtag = gtag;

    gtag("js", new Date());
    gtag("config", config.public.GOOGLE_ANALYTICS_ID, {
      send_page_view: true,
    });

    if (config.public.TRACKING_DEBUG) {
      console.log(
        "‚úÖ Google Analytics initialized:",
        config.public.GOOGLE_ANALYTICS_ID
      );
    }
  }

  // ============================================
  // GOOGLE ADS
  // ============================================
  if (config.public.GOOGLE_ADS_ID) {
    // Google Ads –∏–∑–ø–æ–ª–∑–≤–∞ gtag, –∫–æ–π—Ç–æ –≤–µ—á–µ –µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞–Ω –æ—Ç GA4
    if (window.gtag) {
      window.gtag("config", config.public.GOOGLE_ADS_ID);

      // Enhanced Conversions
      if (config.public.GOOGLE_ADS_ENHANCED_CONVERSIONS) {
        window.gtag("set", "allow_enhanced_conversions", true);
      }

      if (config.public.TRACKING_DEBUG) {
        console.log("‚úÖ Google Ads initialized:", config.public.GOOGLE_ADS_ID);
      }
    } else {
      console.warn("‚ö†Ô∏è Google Ads –∏–∑–∏—Å–∫–≤–∞ Google Analytics –¥–∞ –µ –∞–∫—Ç–∏–≤–∏—Ä–∞–Ω");
    }
  }

  // ============================================
  // ROUTE CHANGE TRACKING - ‚ö° –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –ù–ò–í–û 1.2
  // ============================================
  // –ü—Ä–æ—Å–ª–µ–¥—è–≤–∞–Ω–µ –Ω–∞ page views –ø—Ä–∏ –ø—Ä–æ–º—è–Ω–∞ –Ω–∞ –º–∞—Ä—à—Ä—É—Ç–∞
  // ‚ö° LAZY TRACKING —Å requestIdleCallback - –Ω–µ –±–ª–æ–∫–∏—Ä–∞ UI
  nuxtApp.hook("page:finish", () => {
    const route = useRoute();
    const url = window.location.href;
    const path = route.path;

    // ‚ö° –ö–†–ò–¢–ò–ß–ù–ê –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –û—Ç–ª–∞–≥–∞–º–µ tracking –¥–æ idle –≤—Ä–µ–º–µ
    // –¢–æ–≤–∞ –ø–æ–∑–≤–æ–ª—è–≤–∞ UI –¥–∞ —Å–µ —Ä–µ–Ω–¥–∏—Ä–∞ –ø—ä—Ä–≤–∏, tracking –Ω–µ –±–ª–æ–∫–∏—Ä–∞
    const sendTrackingEvents = () => {
      if (config.public.TRACKING_DEBUG) {
        console.log("üìÑ Page View:", path);
      }

      // Meta Pixel PageView
      if (window.fbq) {
        window.fbq("track", "PageView");
      }

      // Google Analytics PageView
      if (window.gtag && config.public.GOOGLE_ANALYTICS_ID) {
        window.gtag("config", config.public.GOOGLE_ANALYTICS_ID, {
          page_path: path,
          page_location: url,
        });
      }

      // GTM PageView
      if (window.dataLayer && config.public.GTM_ID) {
        window.dataLayer.push({
          event: "page_view",
          page_path: path,
          page_location: url,
        });
      }
    };

    // –ò–∑–ø–æ–ª–∑–≤–∞–º–µ requestIdleCallback –∑–∞ –¥–∞ –Ω–µ –±–ª–æ–∫–∏—Ä–∞–º–µ UI
    if ("requestIdleCallback" in window) {
      requestIdleCallback(sendTrackingEvents, { timeout: 1000 });
    } else {
      // Fallback –∑–∞ –±—Ä–∞—É–∑—ä—Ä–∏ –±–µ–∑ requestIdleCallback
      setTimeout(sendTrackingEvents, 50);
    }
  });
});

// TypeScript —Ç–∏–ø–æ–≤–µ –∑–∞ window –æ–±–µ–∫—Ç–∏—Ç–µ
declare global {
  interface Window {
    fbq: any;
    _fbq: any;
    gtag: any;
    dataLayer: any[];
  }
}
